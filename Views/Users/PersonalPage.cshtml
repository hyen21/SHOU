@model IEnumerable<SHOU.Models.EditModel.PostViewModel>

@{
    ViewData["Title"] = "Trang cá nhân";
    var name = @User.FindFirst("Name")?.Value;
    var idUserSignIn = @User.FindFirst("Id")?.Value;
}

<div class="avatar">
    <div class="background">
        <img src="/Img/noprofil.jpg" alt="" width="100%" id="backgroundProfile" />
        <div class="upload-background">
            <button type="button" class="btn-warning">
                <i class="fa fa-camera"></i> Đổi ảnh bìa
                <input type="file" accept="image/*" onchange="changeBackgroundProfile(this)" />
            </button>
        </div>
    </div>
    <div class="upload">
        <div class="wrap_avatar">
            <img src="/Img/noprofil.jpg" width="200" height="200" id="avatarProfile" />
            <div class="round">
                <input type="file" accept="image/*" onchange="changeAvatarProfile(this)" />
                <i class="fa fa-camera" style="color: #fff;"></i>
            </div>
        </div>
        <div class="name">
            @name
        </div>
    </div>

</div>
<div class="edit-profile">
    <div class="col-md-3">
        <table class="table">
            <tbody>
                <tr>
                    <td class="text-success"><i class="fa fa-user"></i> Họ và tên</td>
                    <td id="name"></td>
                </tr>
                <tr>
                    <td class="text-success"><i class="fa fa-calendar"></i> Ngày sinh</td>
                    <td id="birthday"></td>
                </tr>
                <tr>
                    <td class="text-success"><i class="fa fa-venus-mars"></i> Giới tính</td>
                    <td id="gender"></td>
                </tr>
                <tr>
                    <td class="text-success"><i class="fa fa-phone"></i> Số điện thoại</td>
                    <td id="phone"></td>
                </tr>
                <tr>
                    <td class="text-success"><i class="fa fa-envelope-o"></i> Email</td>
                    <td id="email"></td>
                </tr>
                <tr>
                    <td class="text-success"><i class="fa fa-map-marker"></i> Địa chỉ</td>
                    <td id="address"></td>
                </tr>
                <tr>
                    <td class="text-success"><i class="fa fa-id-card"></i> Tài khoản</td>
                    <td id="userName"></td>
                </tr>
            </tbody>
        </table>
        <div class="button-submit-edit-proflie">
            <button id="editProfile" class="button-submit-blue" style="width:100px;" onclick="enableEditing()">Chỉnh sửa</button>
        </div>
    </div>
    <div class="col-md-9">
        <div class="create-post">
            <img src="/Img/noprofil.jpg" width="50" height="50" style=" border-radius: 50%;" id="avatarProfile1" />
            <input type="text" class="form-control" id="createPost" placeholder="Bạn muốn đăng bài?" />
        </div>
        @foreach (var item in Model)
        {
            <div class="list-post" id="@item.Id" name="post">
                <div style="display:flex; justify-content:space-between;">
                    <div style="display:flex;">
                        <img src="@item.Avatar" width="50" height="50" style=" border-radius: 50%;" />
                        <div style="margin-left:8px">
                            <span> @item.Name</span> <br />
                            <span> @item.CreateTime</span>
                        </div>
                    </div>
                    <div>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-cogs"></i>
                            </button>
                            <div class="dropdown-menu dropdown-edit" aria-labelledby="dropdownMenuButton">
                                <a class="nav-link text-dark" style=" cursor: pointer;" name="edit">Chỉnh sửa</a>
                                <a class="nav-link text-dark" style=" cursor: pointer;" name="delete">Xoá</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    @item.Content
                </div>
                <div class="img-list-post">
                    <img src="@item.Image" width="500" height="500" />
                </div>
                @* <div class="static-like-comment">
                    <div style="margin-left:20px">
                        <img src="/Img/count-like-icon.png" width="20" height="20" />
                        <span name="countLike">@item.CountLike</span>
                    </div>
                    <div style="margin-right:20px">
                        <span>@item.CountCmt</span> <span>bình luận</span>
                    </div>
                </div> *@
               @*  <div class="like-comment">
                    <div class="col-md-6 like-comment">
                        @if (item.Liked)
                        {
                            <button class="btn-like liked" name="like">
                                <img class="like-icon liked" name="icon-like" src="/Img/Liked-icon.png" width="40" height="40" />
                                <span> Thích</span>
                            </button>
                        }
                        else
                        {
                            <button class="btn-like" name="like">
                                <img class="like-icon" name="icon-like" src="/Img/Like-icon.png" width="40" height="40" />
                                <span> Thích</span>
                            </button>
                        }
                    </div> *@
                    @* <div class="col-md-6 like-comment">
                        <button class="btn-like-cmt btn-like">
                            <img src="/Img/comment-icon.png" width="40" height="40" />
                            <span> Bình luận</span>
                        </button>

                    </div>
            </div>*@
            </div>
        }

    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" id="modalProfile">
    <div class="modal-dialog" role="document">
        <div class="modal-content edit-profile-modal">
            <div class="panel panel-primary">
                <div class="panel-heading title-model" id="modalTitle">Sửa thông tin</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label>Họ và tên</label>
                        <input type="text" class="form-control" id="nameEdit">
                    </div>
                    <div class="form-group">
                        <label>Ngày sinh</label>
                        <input type="date" class="form-control" id="birthdayEdit">
                    </div>
                    <div class="form-group">
                        <label>Giới tính</label>
                        <select class="form-control" id="genderEdit">
                            <option value="true" id="nam">Nam</option>
                            <option value="false" id="nu">Nữ</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Số điện thoại</label>
                        <input type="text" class="form-control" id="phoneEdit">
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="text" class="form-control" id="emailEdit">
                    </div>
                    <div class="form-group">
                        <label>Địa chỉ</label>
                        <input type="text" class="form-control" id="addressEdit">
                    </div>
                </div>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnSubmit">Lưu</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="btnClose">Đóng</button>
            </div>
        </div>

    </div>
</div>
<div class="modal" tabindex="-1" role="dialog" id="modalCreatePost">
    <div class="modal-dialog" role="document">
        <div class="modal-content edit-profile-modal">
            <div class="panel panel-primary">
                <div class="panel-heading title-model" id="modalTitle">Tạo bài viết</div>
                <div class="panel-body">
                    <input hidden id="idposts" value="" />
                    <div>
                        <img src="/Img/noprofil.jpg" width="50" height="50" style=" border-radius: 50%;" id="avatarProfile2" />
                        <span>@name</span>
                    </div>
                    <div class="form-group" style="margin-top: 20px;">
                        <textarea class="form-control" id="textPost" style="border-radius: 20px;" placeholder="Những điều bạn muốn nói."></textarea>
                    </div>
                    <div class="hero">
                        <label for="input-file" id="drop-area">
                            <input type="file" accept="image/*" id="input-file" hidden>
                            <div id="img-view">
                                <img src="/Img/upload.png">
                                <P>Kéo thả ảnh hoặc click </br> để thêm ảnh!</P>
                                <span>Tải ảnh lên từ máy tính của bạn! </span>
                            </div>
                        </label>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnCreatePost">Tạo</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="btnClosePost">Đóng</button>
            </div>
        </div>

    </div>
</div>


@section scripts {
    <script>

        // vào màn chạy luôn các function này
        $(document).ready(function () {
            LoadInfoUser();
        });

        // khi nhấn vào nút like
        $(document).on('click', "button[name='like']", function () {
            let idPostLike = $(this).closest('div[name="post"]').attr('id');
            let idUserSignIn = '@idUserSignIn';
            $(this).toggleClass('liked');
            $(this).find('.like-icon').toggleClass('liked');
            $.ajax({
                url: '/Likes/LikePost',
                type: 'post',
                data: {
                    idUser: idUserSignIn,
                    idPost: idPostLike,
                },
                success: function (data) {
                    if (data.code == 200) {
                        $.ajax({
                            url: '/Likes/CountLike',
                            type: 'post',
                            data: {
                                idPost: idPostLike,
                            },
                            success: function (data) {
                                if (data.code == 200) {
                                    $(`#${idPostLike} span[name="countLike"]`).text(data.countLike);
                                } else {
                                    alert(data.msg);
                                }
                            }
                        });
                    } else {
                        alert(data.msg);

                    }
                }
            });
        });

        // khi nhấn vào nút xóa
        $(document).on('click', "a[name='delete']", function () {
            let idPost = $(this).closest('div[name="post"]').attr('id');
            $.ajax({
                url: '/Posts/Delete',
                type: 'post',
                data: {
                    id: idPost,
                },
                success: function (data) {
                    if (data.code == 200) {
                        alert(data.msg);
                        location.reload();
                    } else {
                        alert(data.msg);
                    }
                }
            });
        });

        // khi nhấn vào nút chỉnh sửa
        $(document).on('click', "a[name='edit']", function () {
            let idPost = $(this).closest('div[name="post"]').attr('id');
            console.log(idPost);
            $.ajax({
                url: '/Users/GetProfile',
                type: 'get',
                success: function (data) {
                    console.log(data);
                    $('#avatarProfile2').attr('src', data.user.avatar);
                },
                error: function (error) {
                    console.log(error);
                }
            });
            $.ajax({
                url: '/Posts/Detail',
                type: 'get',
                data: {
                    id: idPost,
                },
                success: function (data) {
                    if (data.code == 200) {
                        $('#textPost').text(data.detail.content);
                        imageView.style.backgroundImage = `url(${data.detail.image})`;
                        imageView.textContent = "";
                        imageView.style.border = 0;
                        $('#idposts').val(data.detail.id);
                    } else {
                        alert(data.msg);
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
            
            $('#modalCreatePost').modal('show');
        });


        // khi chọn ảnh thay avatar
        function changeAvatarProfile(input) {
            var avatar = document.getElementById('avatarProfile');
            var avatar1 = document.getElementById('avatarProfile1');
            var file = input.files[0];
            if (file) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    // thay luôn ảnh avatar bằng ảnh vừa input
                    avatar.src = e.target.result;
                    avatar1.src = e.target.result;

                    var formData = new FormData();
                    formData.append('avatar', file);

                    $.ajax({
                        url: '/Users/UpdateAvatar',
                        type: 'post',
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            if (data.code == 200) {
                                alert(data.msg);
                                location.reload();
                            }
                            else {
                                alert(data.msg);
                            }
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                };
                reader.readAsDataURL(file);
            }
        }

        // khi chọn ảnh thay ảnh bìa
        function changeBackgroundProfile(input) {
            var avatar = document.getElementById('backgroundProfile');
            var file = input.files[0];
            if (file) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    // thay luôn ảnh bìa bằng ảnh vừa input
                    avatar.src = e.target.result;

                    // lấy dữ liệu file input vào
                    var formData = new FormData();
                    formData.append('avatar', file);

                    // gọi vào hàm UpdateBackground để lưu ảnh bìa vào database
                    $.ajax({
                        url: '/Users/UpdateBackground',
                        type: 'post',
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            if (data.code == 200) {
                                alert(data.msg);
                            }
                            else {
                                alert(data.msg);
                            }
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                };
                reader.readAsDataURL(file);
            }
        }

        // Load thông tin của user đang đăng nhập
        function LoadInfoUser() {
            $.ajax({
                url: '/Users/GetProfile',
                type: 'get',
                success: function (data) {
                    console.log(data);
                    $('#backgroundProfile').attr('src', data.user.background ?? "/Img/noprofil.jpg");
                    $('#avatarProfile').attr('src', data.user.avatar ?? "/Img/noprofil.jpg");
                    $('#avatarProfile1').attr('src', data.user.avatar ?? "/Img/noprofil.jpg");
                    $('#name').text(data.user.name);
                    $('#birthday').text(moment(data.user.birthday).format('DD/MM/YYYY'));
                    if (data.user.gender) {
                        $('#gender').text("Nam");
                    }
                    else {
                        $('#gender').text("Nữ");
                    }
                    $('#phone').text(data.user.phone);
                    $('#email').text(data.user.email);
                    $('#address').text(data.user.address);
                    $('#userName').text(data.user.userName);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        // khi ấn vào btn chỉnh sửa, nó hiện model ra và fill dữ liệu vào các input
        $('#editProfile').click(function () {
            $.ajax({
                url: '/Users/GetProfile',
                type: 'get',
                success: function (data) {
                    console.log(data);
                    // fill dữ liệu vào các input
                    $('#nameEdit').val(data.user.name);
                    $('#birthdayEdit').val(moment(data.user.birthday).format('YYYY-MM-DD'));
                    if (data.user.gender) {
                        $('#nam').prop('selected', true);
                    }
                    else {
                        $('#nu').prop('selected', true);
                    }
                    $('#phoneEdit').val(data.user.phone);
                    $('#emailEdit').val(data.user.email);
                    $('#addressEdit').val(data.user.address);
                },
                error: function (error) {
                    console.log(error);
                }
            });
            // hiện model ra
            $('#modalProfile').modal('show');
        })

        //khi ấn btn đóng của modal => ẩn modal đi
        $('#btnClose').click(function () { $('#modalProfile').modal('hide'); })

        //khi ấn btn lưu của model
        $('#btnSubmit').click(function () {
            // lấy dữ liệu của các input ra
            let nameEdit = $('#nameEdit').val();
            let birthdayEdit = $('#birthdayEdit').val();
            let genderEdit = $('#genderEdit').val();
            let phoneEdit = $('#phoneEdit').val();
            let emailEdit = $('#emailEdit').val();
            let addressEdit = $('#addressEdit').val();

            if (nameEdit == null || nameEdit.length == 0 || nameEdit.trim().length == 0) {
                alert('Vui lòng nhập họ và tên!');
                return;
            }

            // dùng ajxa để update
            $.ajax({
                url: '/Users/UpdateUser',
                type: 'post',
                data: {
                    name: nameEdit,
                    birthday: birthdayEdit,
                    gender: genderEdit,
                    phone: phoneEdit,
                    email: emailEdit,
                    addressEdit: addressEdit
                },
                success: function (data) {
                    if (data.code == 200) {
                        alert(data.msg);
                        $('#modalProfile').modal('hide');
                        location.reload();
                    } else {
                        alert(data.msg);
                    }
                }
            });
        });

        // khi ấn thêm bài viết => show modal lên
        $('#createPost').click(function () {
            $.ajax({
                url: '/Users/GetProfile',
                type: 'get',
                success: function (data) {
                    console.log(data);
                    $('#avatarProfile2').attr('src', data.user.avatar);
                },
                error: function (error) {
                    console.log(error);
                }
            });
            $('#modalCreatePost').modal('show');
        })

        // khi ấn tạo bài viết
        $('#btnCreatePost').click(function () {
            // lấy dữ liệu của các input ra
            let textPost = $('#textPost').val();
            let idPost = $('#idposts').val();
            console.log(idPost);
            if (idPost.length == 0 || idPost == null) {
                if ((textPost == null || textPost.length == 0) || (inputFile.files[0] == null)) {
                    alert('Vui lòng điên thông tin!');
                    return;
                }
            }

            if (idPost.length == 0 || idPost == null) {
                var formData = new FormData();
                formData.append('textPost', textPost);
                formData.append('img', inputFile.files[0]);
                // dùng ajax để thêm bài viết
                $.ajax({
                    url: '/Posts/Create',
                    type: 'post',
                    processData: false,  // Không xử lý dữ liệu
                    contentType: false,  // Không đặt kiểu dữ liệu
                    data: formData,
                    success: function (data) {
                        if (data.code == 200) {
                            alert(data.msg);
                            $('#modalCreatePost').modal('hide');
                            location.reload();
                        } else {
                            alert(data.msg);
                        }
                    }
                });
            }
            else {
                var formData = new FormData();
                formData.append('textPost', textPost);
                formData.append('img', inputFile.files[0]);
                formData.append('idPost', idPost);

                // dùng ajax để cập nhật bài viết
                $.ajax({
                    url: '/Posts/Update',
                    type: 'post',
                    processData: false,  // Không xử lý dữ liệu
                    contentType: false,  // Không đặt kiểu dữ liệu
                    data: formData,
                    success: function (data) {
                        if (data.code == 200) {
                            alert(data.msg);
                            $('#modalCreatePost').modal('hide');
                            location.reload();
                        } else {
                            alert(data.msg);
                        }
                    }
                });
            }


        });

        //khi ấn btn đóng của modal => ẩn modal đi
        $('#btnClosePost').click(function () { $('#modalCreatePost').modal('hide'); })

        // phần kéo thả, thêm ảnh vào bài viết
        const dropArea = document.getElementById('drop-area');
        const inputFile = document.getElementById('input-file');
        const imageView = document.getElementById('img-view');

        inputFile.addEventListener("change", uploadImage);

        function uploadImage() {
            let imgLink = URL.createObjectURL(inputFile.files[0]);
            imageView.style.backgroundImage = `url(${imgLink})`;
            imageView.textContent = "";
            imageView.style.border = 0;
        }

        dropArea.addEventListener("dragover", function (e) {
            e.preventDefault();
        })

        dropArea.addEventListener("drop", function (e) {
            e.preventDefault();
            inputFile.files = e.dataTransfer.files;
            uploadImage();
        })

    </script>
}
